//
// Autogenerated by Thrift Compiler (0.9.3)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;


var ttypes = module.exports = {};
ttypes.Level = {
  'DEBUG' : 0,
  'INFO' : 1,
  'WARNING' : 2,
  'ERROR' : 3,
  'FATAL' : 4
};
FileNotFound = module.exports.FileNotFound = function(args) {
  Thrift.TException.call(this, "FileNotFound")
  this.name = "FileNotFound"
};
Thrift.inherits(FileNotFound, Thrift.TException);
FileNotFound.prototype.name = 'FileNotFound';
FileNotFound.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

FileNotFound.prototype.write = function(output) {
  output.writeStructBegin('FileNotFound');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

